AJS.SelectModel=AJS.Control.extend({init:function(options){var instance=this;if(options.element){options.element=AJS.$(options.element)}else{options.element=AJS.$(options)}this._setOptions(options);this.$element=this.options.element;this.type=this.$element.attr("multiple")?"multiple":"single";if(this.type==="single"){this.$element.attr("multiple","multiple")}this.$element.bind("reset",function(){instance._parseDescriptors()});this._parseDescriptors()},_getDefaultOptions:function(){return{}},setSelected:function(descriptor){var instance=this,selectedItem=false,changed=false,$toSelect=this.$element.find("option").filter(function(){return this.value===descriptor.value()});if(this.type==="single"){if(this.getValue()===descriptor.value()){return changed}$toSelect=$toSelect.first();this.$element.find("option").each(function(i,option){var currDescriptor=AJS.$(this).data("descriptor");if($toSelect[0]!==option){instance.setUnSelected(currDescriptor)}})}$toSelect.each(function(){var $this=AJS.$(this);selectedItem=true;changed=!$this.is(":selected");$this.attr("selected","selected").data("descriptor").selected(true)});if(!selectedItem){descriptor.selected(true);var newOption=this._render("option",descriptor);newOption.attr("selected","selected");this.$element.append(newOption);changed=true}if(changed){this.$element.trigger("change",descriptor)}return changed},setAllUnSelected:function(){var instance=this;AJS.$(this.getSelectedDescriptors()).each(function(){instance.setUnSelected(this)})},setUnSelected:function(descriptor){var instance=this;this.$element.find("option").filter(function(){return AJS.$(this).attr("value")===descriptor.value()}).each(function(){var $this=AJS.$(this);if(instance.options.removeOnUnSelect||$this.data("descriptor").removeOnUnSelect()){$this.remove()}else{$this.removeAttr("selected");$this.data("descriptor").selected(false)}})},_getOptionItem:function(descriptor,ctx){ctx=ctx||this.$element;var value=descriptor.value().replace(/"/g,'\\"');return ctx.find('option[value="'+value+'"]')},_getOptionGroup:function(descriptor,ctx){ctx=ctx||this.$element;return ctx.find("optgroup").filter(function(){return this.id===descriptor.id()||AJS.$(this).attr("label")===descriptor.label()})},remove:function(descriptor){if(descriptor&&descriptor.model()){descriptor.model().remove()}},getDescriptor:function(value){var returnDescriptor;value=AJS.$.trim(value.toLowerCase());AJS.$.each(this.getAllDescriptors(false),function(e,descriptor){if(value===AJS.$.trim(descriptor.label().toLowerCase())||value===AJS.$.trim(descriptor.value().toLowerCase())){returnDescriptor=descriptor;return false}});return returnDescriptor},appendOptionsFromJSON:function(optionDescriptors){var modified=false;for(var i=0,len=optionDescriptors.length;i<len;i++){var descriptor=optionDescriptors[i];if(descriptor instanceof AJS.GroupDescriptor){this._appendGroup(descriptor);modified=true}else{if(descriptor instanceof AJS.ItemDescriptor){if(!this._getOptionItem(descriptor).length){this._render("option",descriptor).appendTo(this.$element);modified=true}}}}return modified},_appendGroup:function(descriptor){var optgroup=this._getOptionGroup(descriptor);var container=this.$element;var replaceItems=descriptor.replace();if(optgroup.length){if(replaceItems){optgroup.find("option:not(:selected)").remove()}}else{optgroup=this._render("optgroup",descriptor)}optgroup.data("descriptor",descriptor);var items=descriptor.items();var itemScope=(descriptor.uniqueItemScope()=="container")?container:optgroup;for(var i=0,len=items.length;i<len;i++){var optDescriptor=items[i];var option=this._getOptionItem(optDescriptor,itemScope);if(!option.length){optgroup.append(this._render("option",optDescriptor))}else{if(!replaceItems){option.data("descriptor",optDescriptor)}}}var target;var weight=descriptor.weight();if(typeof weight!=="undefined"){target=container.children()[weight];if(target===optgroup[0]){return }}if(target){optgroup.insertBefore(target)}else{optgroup.appendTo(container)}},_parseOption:function(optionElem){var descriptor;optionElem=AJS.$(optionElem);if(this.options.removeNullOptions&&this._hasNullValue(optionElem)){optionElem.remove();return null}descriptor=new AJS.ItemDescriptor({styleClass:optionElem.attr("className"),value:optionElem.val(),fieldText:optionElem.attr("data-field-text"),title:optionElem.attr("title"),label:optionElem.attr("data-field-label")||AJS.$.trim(optionElem.text()),icon:optionElem.css("backgroundImage").replace(/url\(['"]?(.*?)['"]?\)/,"$1"),selected:optionElem.attr("selected")?true:false,model:optionElem});optionElem.data("descriptor",descriptor);return descriptor},_hasNullValue:function(optionElement){return optionElement.val()<0},_parseDescriptors:function(){var instance=this,items=this.$element.children();function parseOptGroup(optionGroup){var properties={label:optionGroup.attr("label"),styleClass:optionGroup.attr("className"),model:optionGroup,items:retrieveAvailableOptions(optionGroup)};var weight=optionGroup.attr("data-weight");if(weight){properties.weight=+weight}optionGroup.data("descriptor",new AJS.GroupDescriptor(properties))}function retrieveAvailableOptions(parent){var availableOptionElems=AJS.$("option",parent),arr=[];AJS.$.each(availableOptionElems,function(){arr.push(instance._parseOption(this))});return arr}items.each(function(i){var item=items.eq(i);if(item.is("optgroup")){parseOptGroup(item)}else{if(item.is("option")){instance._parseOption(item)}}})},getValue:function(){if(this.type==="single"){return this.$element.val()&&this.$element.val()[0]}else{return this.$element.val()}},getSelectedDescriptors:function(){var descriptors=[];this.$element.find("option").each(function(){if(this.selected){descriptors.push(AJS.$.data(this,"descriptor"))}});return descriptors},getAllDescriptors:function(showGroups){var properties,descriptors=[];this.$element.children().each(function(){var descriptor,elem=AJS.$(this);if(elem.is("option")){descriptors.push(elem.data("descriptor"))}else{if(elem.is("optgroup")){if(showGroups!==false){properties=AJS.copyObject(elem.data("descriptor").allProperties(),false);properties.items=[];descriptor=new AJS.GroupDescriptor(properties);descriptors.push(descriptor)}elem.children("option").each(function(){var elem=AJS.$(this);var itemDescriptor=elem.data("descriptor");if(showGroups!==false){descriptor.addItem(itemDescriptor)}else{descriptors.push(itemDescriptor)}})}}});return descriptors},clearUnSelected:function(){this.$element.find("option:not(:selected)").remove()},getUnSelectedDescriptors:function(context){context=context||{};var descriptors=[],selectedValues={},addedValues={},ignoreGroups=context.ignoreGroups,groupId=context.groupId;function isValid(descriptor){var descriptorVal=descriptor.value().toLowerCase();if(!selectedValues[descriptorVal]&&(!addedValues[descriptorVal]||descriptor.allowDuplicate()!==false)){addedValues[descriptorVal]=true;return true}return false}var selectedDescriptors=this.getSelectedDescriptors();AJS.$.each(selectedDescriptors,function(i,descriptor){selectedValues[descriptor.value().toLowerCase()]=true});var selectChildren=this.$element.children();if(groupId){selectChildren=selectChildren.filter("#"+groupId)}selectChildren.each(function(){var descriptor,properties,elem=AJS.$(this);if(elem.is("option")&&!this.selected){descriptor=AJS.$.data(this,"descriptor");if(isValid(descriptor)){descriptors.push(descriptor)}}else{if(elem.is("optgroup")){if(!ignoreGroups){properties=AJS.copyObject(elem.data("descriptor").allProperties(),false);properties.items=[];descriptor=new AJS.GroupDescriptor(properties);descriptors.push(descriptor)}elem.find("option").each(function(){if(this.selected){return }var itemDescriptor=AJS.$.data(this,"descriptor");if(isValid(itemDescriptor)){if(ignoreGroups){descriptors.push(itemDescriptor)}else{descriptor.addItem(itemDescriptor)}}})}}});return descriptors},_renders:{option:function(descriptor){var label=descriptor.label();var text=descriptor.fieldText()||label;var option=new Option(text,descriptor.value());var $option=AJS.$(option);var iconUrl=descriptor.icon();option.title=descriptor.title();if(text!=label){$option.attr("data-field-label",label)}AJS.$.data(option,"descriptor",descriptor);descriptor.model($option);if(iconUrl){$option.css("backgroundImage","url("+iconUrl+")")}return $option},optgroup:function(descriptor){var elem=AJS.$("<optgroup />").addClass(descriptor.styleClass()).attr("label",descriptor.label());descriptor.model(elem);elem.data("descriptor",descriptor);if(descriptor.id()){elem.attr("id",descriptor.id())}return elem}}});